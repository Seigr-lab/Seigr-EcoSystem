name: Release

on:
  push:
    tags:
      - 'v*.*.*'  # Matches version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      # Step 3: Install build dependencies
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build twine

      # Step 4: Clean and Build distribution files
      - name: Build distribution files
        run: |
          rm -rf dist  # Ensure dist/ is clean
          python -m build  # Recommended build method
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Create GitHub Release
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Publish to PyPI (conditionally, if tag is a stable version)
      - name: Upload to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
