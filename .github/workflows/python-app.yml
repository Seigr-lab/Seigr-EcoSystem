name: Python Application CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out repository
      - name: Check out repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      # Step 3: Cache dependencies to speed up workflow
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install main dependencies from requirements.txt
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Run tests with coverage
      - name: Run tests with coverage
        run: |
          pip install pytest pytest-cov  # Install only test dependencies here
          pytest --cov=src --cov-report=xml --cov-report=html --cov-report=term

      # Step 6: Upload coverage report as an artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml  # Coverage XML report for external tools

      # Step 7: Report coverage to Codecov
      - name: Report coverage to Codecov
        if: always()  # Always run this step even if previous steps fail
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}  # Not required for public repositories
          files: coverage.xml
          fail_ci_if_error: true
          flags: unittests
          name: python-app-coverage  # Optional: specify a name for the report
