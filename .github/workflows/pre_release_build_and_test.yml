name: Pre-Release Build and Test

on:
  release:
    types: [prereleased]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      # Step 3: Cache pip dependencies
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 5: Run tests with detailed reporting
      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings --junitxml=results.xml --tb=short
        continue-on-error: true  # Allows subsequent steps even if tests fail

      # Step 6: Upload test results as artifacts
      - name: Upload Test Results
        if: always()  # Runs regardless of the test outcome
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: results.xml

      # Optional Step 7: Generate and Upload Code Coverage Report
      - name: Run coverage and generate report
        run: |
          pip install coverage  # Install coverage if not in requirements
          coverage run -m pytest
          coverage xml -o coverage.xml
          coverage report
        continue-on-error: true  # Optional, allows workflow to continue if coverage fails

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      # Step 8: Display message on failure
      - name: Display Test Summary
        if: failure()
        run: echo "Pre-release build and test completed with issues. Check test-results and coverage-report artifacts."
