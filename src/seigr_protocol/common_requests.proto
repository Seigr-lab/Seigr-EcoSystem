syntax = "proto3";

package seigr;

import "common.proto";  // Import for ThreatLevel and any common enums

// Enum for defining priority levels in replication requests
enum ReplicationPriority {
    PRIORITY_UNDEFINED = 0;
    PRIORITY_LOW = 1;                       // Low-priority replication
    PRIORITY_MEDIUM = 2;                    // Standard priority
    PRIORITY_HIGH = 3;                      // High-priority for frequently accessed data
    PRIORITY_CRITICAL = 4;                  // Critical for high-risk or high-value data
    PRIORITY_EMERGENCY = 5;                 // Emergency level for immediate action
}

// Enum for specifying replication triggers
enum ReplicationTrigger {
    REPLICATION_TRIGGER_UNDEFINED = 0;
    REPLICATION_TRIGGER_MANUAL_REQUEST = 1;       // Manual replication request
    REPLICATION_TRIGGER_DEMAND_BASED = 2;         // Triggered by increased demand
    REPLICATION_TRIGGER_IMMUNE_SYSTEM_ALERT = 3;  // Triggered by security or integrity alerts
    REPLICATION_TRIGGER_PERIODIC_CHECK = 4;       // Periodic replication check
    REPLICATION_TRIGGER_NETWORK_EXPANSION = 5;    // Triggered by network growth
    REPLICATION_TRIGGER_REGULATORY_COMPLIANCE = 6; // Compliance-based replication
    REPLICATION_TRIGGER_DATA_ACCESS_SPIKE = 7;    // Triggered by a spike in data access
}

// Enum for defining replication strategies
enum ReplicationStrategy {
    REPLICATION_STRATEGY_UNDEFINED = 0;
    REPLICATION_STRATEGY_DEMAND_BASED = 1;        // Based on demand
    REPLICATION_STRATEGY_PERIODIC = 2;            // Periodic, time-based replication
    REPLICATION_STRATEGY_FULL = 3;                // Complete replication for all data segments
    REPLICATION_STRATEGY_ADAPTIVE = 4;            // Adaptive replication strategy
    REPLICATION_STRATEGY_GEOGRAPHICALLY_AWARE = 5; // Focused on geographic distribution
    REPLICATION_STRATEGY_LOAD_BALANCED = 6;       // Load-balanced replication for high-demand data
}

// Consolidated message for replication requests with extended control parameters
message ReplicationRequest {
    string request_id = 1;                        // Unique identifier for the replication request
    string segment_id = 2;                        // Data segment ID or hash for replication
    ThreatLevel threat_level = 3;                 // Threat level, if applicable
    ReplicationPriority priority = 4;             // Priority level of the replication
    ReplicationTrigger trigger = 5;               // Trigger for initiating replication
    ReplicationStrategy strategy = 6;             // Replication strategy
    bool critical_replication = 7;                // Indicates if critical replication is required
    string requested_by = 8;                      // User or system initiating the request
    string request_timestamp = 9;                 // Timestamp of the request initiation
    map<string, string> parameters = 10;          // Replication-specific parameters
    string reason = 11;                           // Reason for replication (e.g., "data integrity concern")
    int32 max_retries = 12;                       // Maximum retry attempts for replication
    int32 retry_interval_seconds = 13;            // Interval in seconds between retry attempts
    string time_to_live = 14;                     // TTL for replication validity
    string compliance_level = 15;                 // Compliance level (e.g., "GDPR")
    string encryption_requirement = 16;           // Encryption requirement level (e.g., "AES-256")
    string access_control_level = 17;             // Required access level for replicated data
    string geo_location = 18;                     // Geographic region restrictions for replication
    bool dynamic_scaling = 19;                    // Enables dynamic scaling based on demand
    double replication_density = 20;              // Density factor for adaptive replication
    string error_threshold_policy = 21;           // Policy for managing error thresholds
    map<string, string> metadata = 22;            // Metadata for additional context (e.g., region, protocol)
}
