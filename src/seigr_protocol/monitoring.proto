syntax = "proto3";

package seigr;

import "common.proto";              // For ThreatLevel, OperationalStatus, etc.

// Enum to categorize types of escalations based on severity and required actions
enum EscalationType {
    ESCALATION_TYPE_UNDEFINED = 0;
    THREAT_REPLICATION = 1;          // Escalation due to high threat triggering replication
    ALERT_ONLY = 2;                  // Escalation for alerting without replication
    SYSTEM_LOCKDOWN = 3;             // Escalation leading to partial or full system lockdown
    ADAPTIVE_RECONFIGURATION = 4;    // Reconfiguration based on monitored patterns
}

// Message for escalating high-risk segments, initiating urgent replication and alerting
message Escalation {
    string escalation_id = 1;                   // Unique identifier for escalation instance
    string segment_hash = 2;                    // Hash of the high-risk segment
    ThreatLevel threat_level = 3;               // Current threat level prompting escalation
    EscalationType escalation_type = 4;         // Type of escalation response required
    string escalated_at = 5;                    // Timestamp of escalation initiation
    bool replication_triggered = 6;             // True if replication was triggered
    string escalation_reason = 7;               // Reason for escalation (e.g., "critical threat level")
    repeated string alert_recipients = 8;       // List of hyphens or users alerted due to the escalation
    map<string, string> metadata = 9;           // Metadata for audit and tracking purposes
    string response_status = 10;                // Status of the escalation response (e.g., "PENDING", "RESOLVED")
    string responder_id = 11;                   // ID of the user or system responsible for responding
    string resolution_timestamp = 12;           // Timestamp indicating when escalation was resolved
    string response_details = 13;               // Detailed notes on the response or actions taken
    string next_review_timestamp = 14;          // Timestamp for the next scheduled review of this escalation
    repeated EscalationHistory escalation_history = 15; // Historical steps of escalation and responses
}

// Message to log each escalation step with detailed status and responses
message EscalationHistory {
    string update_id = 1;                       // Unique ID for each escalation update
    string timestamp = 2;                       // Timestamp of this escalation step
    string status = 3;                          // Current status (e.g., "In Progress", "Resolved")
    string action_taken = 4;                    // Action taken in this step
    string updated_by = 5;                      // ID of the user or system that updated the escalation
    map<string, string> additional_info = 6;    // Additional information for each update
}

// Message for configuring adaptive monitoring thresholds and settings
message MonitoringConfig {
    int32 critical_threshold = 1;               // Threat level threshold to trigger critical replication
    int32 severe_threshold = 2;                 // Threshold for severe-level threats requiring immediate escalation
    int32 moderate_threshold = 3;               // Threshold for moderate-level replication
    int32 adaptive_check_interval = 4;          // Interval for performing adaptive monitoring checks
    int32 alert_frequency_minutes = 5;          // Frequency (in minutes) for repeating alerts
    bool enable_auto_lockdown = 6;              // Flag to enable system lockdown under critical threats
    map<string, string> config_metadata = 7;    // Additional configuration parameters or notes
    string config_version = 8;                  // Version identifier for the monitoring configuration
    string last_updated = 9;                    // Timestamp of the last configuration update
    bool enable_severity_scaling = 10;          // Enables scaling responses by threat level
    string default_response_strategy = 11;      // Default response action (e.g., "notify", "replicate")
    bool dynamic_alert_scaling = 12;            // Flag to enable scaling of alert frequency based on trends
    string fallback_strategy = 13;              // Fallback strategy if the primary strategy fails
    int32 data_volume_threshold = 14;           // Threshold for data volume triggering additional monitoring
}

// Message to track historical adaptive monitoring checks and results
message AdaptiveMonitoringLog {
    string log_id = 1;                          // Unique identifier for the monitoring log entry
    string monitored_segment = 2;               // Segment or area being monitored
    ThreatLevel detected_threat_level = 3;      // Threat level detected during this monitoring instance
    string check_timestamp = 4;                 // Timestamp of the monitoring check
    bool triggered_escalation = 5;              // Indicates if an escalation was triggered by this check
    string escalation_id = 6;                   // ID of the associated escalation, if applicable
    map<string, string> log_metadata = 7;       // Metadata for contextual information on this check
    string response_action_taken = 8;           // Action taken in response to detected threat
    string next_check_scheduled = 9;            // Scheduled timestamp for the next monitoring check
    float detection_accuracy = 10;              // Accuracy of threat detection during this check
    string monitoring_operator = 11;            // User or system initiating the check
    map<string, string> adaptive_parameters = 12; // Parameters applied in adaptive monitoring logic
}
