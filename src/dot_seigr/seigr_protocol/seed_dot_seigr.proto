syntax = "proto3";

package seigr;

// Primary message for managing seed clusters in the Seigr network
message SeedDotSeigr {
    string root_hash = 1;
    string seed_hash = 2;
    string creation_timestamp = 3;
    repeated SegmentMetadata segments = 4;
    repeated string secondary_clusters = 5;
    repeated LineageEntry network_lineage = 6;
    bool secondary_cluster_active = 7;
    string version = 8;
    FileMetadata file_metadata = 9;
    repeated TemporalLayer temporal_layers = 10; // Historical metadata layers
}

// Message representing metadata for the entire file
message FileMetadata {
    string version = 1;
    string creator_id = 2;
    string original_filename = 3;
    string original_extension = 4;
    string file_hash = 5;
    string creation_timestamp = 6;
    int32 total_segments = 7;
    AccessContext access_context = 8;
}

// Metadata for individual segments within a seed file
message SegmentMetadata {
    string version = 1;
    string creator_id = 2;
    int32 segment_index = 3;
    string segment_hash = 4;
    string timestamp = 5;
    string primary_link = 6;
    repeated string secondary_links = 7;
    CoordinateIndex coordinate_index = 8;
    string data_hash = 9;  // Hash of the segment data for integrity verification
}

// Temporal layer message for storing historical snapshots
message TemporalLayer {
    string timestamp = 1;                    // When this layer was created
    repeated SegmentMetadata segments = 2;    // Snapshot of segments in this layer
    string layer_hash = 3;                    // Hash for the integrity of this layer
    map<string, bytes> data_snapshot = 4;     // Snapshot of segment data, links, and coordinates
}

// Entry for logging changes in network lineage
message LineageEntry {
    string seigr_id = 1;
    string timestamp = 2;
}

// Index message to support 3D coordinate positioning for data
message CoordinateIndex {
    int32 x = 1;
    int32 y = 2;
    int32 z = 3;
}

// Message for tracking access metadata for replication
message AccessContext {
    int32 access_count = 1;
    string last_accessed = 2;
    repeated string node_access_history = 3;
}
